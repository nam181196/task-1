/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Model;
import model.Student;

/**
 *
 * @author nam
 */
public class View extends javax.swing.JFrame {

    public model.Model model;
    private double average;

    /**
     * Creates new form view
     */
    public View() {
        initComponents();
        this.model = new Model();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelNameSearch = new javax.swing.JLabel();
        jTextFieldNameSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jButtonCancelSearch = new javax.swing.JButton();
        jButtonSort = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVariable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabelIdInput = new javax.swing.JLabel();
        jTextFieldIdInput = new javax.swing.JTextField();
        jLabelMath = new javax.swing.JLabel();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jTextFieldInputMath = new javax.swing.JTextField();
        jLabelMark = new javax.swing.JLabel();
        jLabelPhysics = new javax.swing.JLabel();
        jTextFieldInputPhysics = new javax.swing.JTextField();
        jTextFieldInputChemistry = new javax.swing.JTextField();
        jLabelChemistry = new javax.swing.JLabel();
        jLabelGPA = new javax.swing.JLabel();
        jLabelAbility = new javax.swing.JLabel();
        jLabelGender = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jLabelClassification = new javax.swing.JLabel();
        jLabelNameInput = new javax.swing.JLabel();
        jTextFieldNameInput = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonEdit = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabelGPAVal = new javax.swing.JLabel();
        jLabelAbilityVal = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openFileMenu = new javax.swing.JMenuItem();
        saveFileMenu = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuExit = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelNameSearch.setText("Họ tên");

        jTextFieldNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameSearchActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Tìm kiếm");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonCancelSearch.setText("Huỷ tìm");
        jButtonCancelSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelSearchActionPerformed(evt);
            }
        });

        jButtonSort.setText("Sắp xếp");
        jButtonSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNameSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButtonSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSort)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameSearch)
                    .addComponent(jTextFieldNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch)
                    .addComponent(jButtonCancelSearch)
                    .addComponent(jButtonSort))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTableVariable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Tên", "Giới tính", "Điểm toán", "Điểm lý", "Điểm hoá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableVariable);

        jLabelIdInput.setText("Mã sv");

        jTextFieldIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdInputActionPerformed(evt);
            }
        });

        jLabelMath.setText("Toán");

        buttonGroupGender.add(jRadioButtonMale);
        jRadioButtonMale.setText("Nam");
        jRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMaleActionPerformed(evt);
            }
        });

        buttonGroupGender.add(jRadioButtonFemale);
        jRadioButtonFemale.setText("Nữ");

        jTextFieldInputMath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputMathActionPerformed(evt);
            }
        });

        jLabelMark.setText("Điểm:");

        jLabelPhysics.setText("Lý");

        jTextFieldInputPhysics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputPhysicsActionPerformed(evt);
            }
        });

        jTextFieldInputChemistry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputChemistryActionPerformed(evt);
            }
        });

        jLabelChemistry.setText("Hoá");

        jLabelGPA.setText("Điểm TB:");

        jLabelAbility.setText("Học lực:");

        jLabelGender.setText("Giới tính:");

        jButtonAdd.setText("Thêm");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Xoá");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonSave.setText("Lưu");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabelClassification.setText("Xếp loại:");

        jLabelNameInput.setText("Họ tên");

        jTextFieldNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameInputActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Sửa");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Hủy bỏ");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMark)
                            .addComponent(jLabelClassification))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelAbility)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAbilityVal))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelMath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldInputMath, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelPhysics, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldInputPhysics, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelChemistry, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldInputChemistry, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabelGPA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGPAVal)))
                        .addGap(60, 60, 60))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelIdInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelNameInput)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelGender)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonMale)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButtonFemale)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelIdInput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonMale)
                            .addComponent(jRadioButtonFemale)
                            .addComponent(jLabelGender))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMark)
                    .addComponent(jLabelMath)
                    .addComponent(jTextFieldInputMath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPhysics)
                    .addComponent(jTextFieldInputPhysics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelChemistry)
                    .addComponent(jTextFieldInputChemistry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGPA)
                    .addComponent(jLabelGPAVal))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelClassification)
                            .addComponent(jLabelAbility)
                            .addComponent(jLabelAbilityVal))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        openFileMenu.setText("Open");
        openFileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        openFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openFileMenu);

        saveFileMenu.setText("Save");
        saveFileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveFileMenu);
        jMenu1.add(jSeparator2);

        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExit);

        jMenuBar1.add(jMenu1);

        exitMenu.setText("About");
        jMenuBar1.add(exitMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameSearchActionPerformed
        // TODO add your handling code here:   
        this.findStudentFunction();
    }//GEN-LAST:event_jTextFieldNameSearchActionPerformed

    private void jRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMaleActionPerformed

    private void jTextFieldInputMathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputMathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInputMathActionPerformed

    private void jTextFieldInputPhysicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputPhysicsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInputPhysicsActionPerformed

    private void jTextFieldInputChemistryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputChemistryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInputChemistryActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        this.deleteStudentFunction();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        try {
            this.addStudentFunction();
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldIdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdInputActionPerformed

    private void jTextFieldNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameInputActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        // TODO add your handling code here:
        this.viewInformationSelectedStudent();
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void openFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuActionPerformed
        // TODO add your handling code here:
        this.openFileFunction();
    }//GEN-LAST:event_openFileMenuActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        // TODO add your handling code here:
        this.exit();
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void saveFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileMenuActionPerformed
        // TODO add your handling code here:
        this.saveFileFunction();
    }//GEN-LAST:event_saveFileMenuActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        this.findStudentFunction();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonCancelSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelSearchActionPerformed
        // TODO add your handling code here:
        this.reloadDataFunction();
    }//GEN-LAST:event_jButtonCancelSearchActionPerformed

    private void jButtonSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSortActionPerformed
        // TODO add your handling code here:
        this.sortStudentByGPAFunction();
    }//GEN-LAST:event_jButtonSortActionPerformed

    public void clearForm() {
        jTextFieldNameSearch.setText("");
        jTextFieldNameInput.setText("");
        jTextFieldIdInput.setText("");
        jTextFieldInputMath.setText("");
        jTextFieldInputPhysics.setText("");
        jTextFieldInputChemistry.setText("");
        jLabelAbilityVal.setText("");
        jLabelGPAVal.setText("");
        buttonGroupGender.clearSelection();
    }

    public void addStudentToTable(Student student) {
        DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
        tableModel.addRow(new Object[]{
            student.getId() + "", student.getName(), (student.isGender() ? "Nam" : "Nữ"), student.getMath() + "",
            student.getPhysics() + "", student.getChemistry() + "",});
    }

    public void saveOrUpdateStudent(Student student) {
        DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
        if (!this.model.checkExist(student)) {
            this.model.create(student);
            this.addStudentToTable(student);
        } else {
            this.model.update(student);
            int rows = tableModel.getRowCount();
            for (int i = 0; i < rows; i++) {
                String id = tableModel.getValueAt(i, 0) + "";
                if (id.equals(student.getId() + "")) {
                    tableModel.setValueAt(student.getId() + "", i, 0);
                    tableModel.setValueAt(student.getName(), i, 1);
                    tableModel.setValueAt((student.isGender() ? "Nam" : "Nữ"), i, 2);
                    tableModel.setValueAt(student.getMath(), i, 3);
                    tableModel.setValueAt(student.getPhysics(), i, 4);
                    tableModel.setValueAt(student.getChemistry(), i, 5);
                }
            }
        }
    }

    public Student fetchSelectedStudent() {
        DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
        int i_row = jTableVariable.getSelectedRow();
        int id = Integer.valueOf(tableModel.getValueAt(i_row, 0) + "");
        String name = tableModel.getValueAt(i_row, 1) + "";
        String textGender = tableModel.getValueAt(i_row, 2) + "";
        boolean gender = textGender.equals("Nam");
        float mathScore = Float.valueOf(tableModel.getValueAt(i_row, 3) + "");
        float physicsScore = Float.valueOf(tableModel.getValueAt(i_row, 4) + "");
        float chemistryScore = Float.valueOf(tableModel.getValueAt(i_row, 5) + "");

        Student student = new Student(id, name, gender, mathScore, physicsScore, chemistryScore);
        return student;
    }

    public float calAverageScore(float score1, float score2, float score3) {
        return (score1 + score2 + score3) / 3;
    }

    public String getEvaluation(float avgScore) {
        if (avgScore >= 8) {
            return "Giỏi";
        } else if (avgScore < 8 && avgScore >= 6.5) {
            return "Khá";
        } else if (avgScore < 6.5 && avgScore >= 5) {
            return "Trung Bình";
        } else {
            return "Yếu";
        }
    }

    public void viewInformationSelectedStudent() {
        Student student = fetchSelectedStudent();

        this.jTextFieldIdInput.setText(student.getId() + "");
        this.jTextFieldNameInput.setText(student.getName() + "");
        if (student.isGender()) {
            jRadioButtonMale.setSelected(true);
        } else {
            jRadioButtonFemale.setSelected(true);
        }
        this.jTextFieldInputMath.setText(student.getMath() + "");
        this.jTextFieldInputPhysics.setText(student.getPhysics() + "");
        this.jTextFieldInputChemistry.setText(student.getChemistry() + "");
        float avgScore = this.calAverageScore(student.getMath(), student.getPhysics(), student.getChemistry());
        this.jLabelGPAVal.setText(avgScore + "");
        this.jLabelAbilityVal.setText(this.getEvaluation(avgScore));
    }

    public void deleteStudentFunction() {
        DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
        int i_row = jTableVariable.getSelectedRow();
        int select = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa dòng đã chọn không?");
        if (select == JOptionPane.YES_OPTION) {
            Student student = fetchSelectedStudent();
            this.model.delete(student);
            tableModel.removeRow(i_row);
        }
    }

    public void addStudentFunction() {
        int id = Integer.valueOf(this.jTextFieldIdInput.getText());
        String name = this.jTextFieldNameInput.getText();
        boolean gender = true;
        if (this.jRadioButtonMale.isSelected()) {
            gender = true;
        } else if (this.jRadioButtonFemale.isSelected()) {
            gender = false;
        }
        float mathScore = Float.valueOf(this.jTextFieldInputMath.getText());
        float physicsScore = Float.valueOf(this.jTextFieldInputPhysics.getText());
        float chemistryScore = Float.valueOf(this.jTextFieldInputChemistry.getText());

        Student student = new Student(id, name, gender, mathScore, physicsScore, chemistryScore);
        this.saveOrUpdateStudent(student);
    }

    public void reloadDataFunction() {
        while (true) {
            DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
            int rows = tableModel.getRowCount();
            if (rows == 0) {
                break;
            } else
                try {
                tableModel.removeRow(0);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        for (Student student : this.model.getListStudent()) {
            this.addStudentToTable(student);
        }
    }

    public void findStudentFunction() {
        this.reloadDataFunction();
        String studentName = this.jTextFieldNameSearch.getText().toUpperCase();
        DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
        int rows = tableModel.getRowCount();
        Set<Integer> idsToRemove = new TreeSet<Integer>();

        if (studentName.length() > 0) {
            for (int i = 0; i < rows; i++) {
                String name = tableModel.getValueAt(i, 1) + "";
                if (!name.toUpperCase().contains(studentName)) {
                    String id = tableModel.getValueAt(i, 0) + "";
                    idsToRemove.add(Integer.valueOf(id));
                }
            }
        }
        for (Object idRemove : idsToRemove) {
            rows = tableModel.getRowCount();
            for (int i = 0; i < rows; i++) {
                String idInTable = tableModel.getValueAt(i, 0) + "";
                if (idInTable.equals(idRemove.toString())) {
                    try {
                        tableModel.removeRow(i);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    break;
                }
            }
        }

    }

    public void sortStudentByGPAFunction() {
    DefaultTableModel tableModel = (DefaultTableModel) jTableVariable.getModel();
    int rows = tableModel.getRowCount();

    List<Object[]> studentDataList = new ArrayList<>();
    for (int i = 0; i < rows; i++) {
        String id = tableModel.getValueAt(i, 0).toString();
        String name = tableModel.getValueAt(i, 1).toString();
        String textGender = tableModel.getValueAt(i, 2) + "";

        Float math = null;
        Float physics = null;
        Float chemistry = null;
        try {
            math = Float.parseFloat(tableModel.getValueAt(i, 3).toString());
            physics = Float.parseFloat(tableModel.getValueAt(i, 4).toString());
            chemistry = Float.parseFloat(tableModel.getValueAt(i, 5).toString());
        } catch (NumberFormatException e) {
            e.printStackTrace();
            continue; 
        }

        float avgScore = calAverageScore(math, physics, chemistry);
        Object[] rowData = {id, name, textGender, math, physics, chemistry, avgScore};

        studentDataList.add(rowData);
    }

    Collections.sort(studentDataList, new Comparator<Object[]>() {
        @Override
        public int compare(Object[] row1, Object[] row2) {
            float avgScore1 = Float.parseFloat(row1[6].toString());
            float avgScore2 = Float.parseFloat(row2[6].toString());
            return Float.compare(avgScore2, avgScore1);
        }
    });

    tableModel.setRowCount(0);

    for (Object[] rowData : studentDataList) {
        tableModel.addRow(rowData);
    }
}


    public void saveFile(String path) {
        try {
            this.model.setFileName(path);
            FileOutputStream fos = new FileOutputStream(path);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            for (Student student : this.model.getListStudent()) {
                oos.writeObject(student);
            }
            oos.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void saveFileFunction() {
        if (this.model.getFileName().length() > 0) {
            saveFile(this.model.getFileName());
        } else {
            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                saveFile(file.getAbsolutePath());
            }
        }
    }

    public void openFile(File file) {
        ArrayList<Student> list = new ArrayList();
        try {
            this.model.setFileName(file.getAbsolutePath());
            FileInputStream fis = new FileInputStream(file);
            ObjectInputStream ois = new ObjectInputStream(fis);
            Student student = null;
            while ((student = (Student) ois.readObject()) != null) {
                list.add(student);
//                System.out.println(list);
            }
            ois.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        this.model.setListStudent(list);
    }

    public void openFileFunction() {
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            openFile(file);
            reloadDataFunction();
        }
    }

    public void exit() {
        int select = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát khỏi chương trình?", "Exit",
                JOptionPane.YES_NO_OPTION);
        if (select == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                View mainForm = new View();
                mainForm.setLocationRelativeTo(null);
                mainForm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCancelSearch;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSort;
    private javax.swing.JLabel jLabelAbility;
    private javax.swing.JLabel jLabelAbilityVal;
    private javax.swing.JLabel jLabelChemistry;
    private javax.swing.JLabel jLabelClassification;
    private javax.swing.JLabel jLabelGPA;
    private javax.swing.JLabel jLabelGPAVal;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelIdInput;
    private javax.swing.JLabel jLabelMark;
    private javax.swing.JLabel jLabelMath;
    private javax.swing.JLabel jLabelNameInput;
    private javax.swing.JLabel jLabelNameSearch;
    private javax.swing.JLabel jLabelPhysics;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTableVariable;
    private javax.swing.JTextField jTextFieldIdInput;
    private javax.swing.JTextField jTextFieldInputChemistry;
    private javax.swing.JTextField jTextFieldInputMath;
    private javax.swing.JTextField jTextFieldInputPhysics;
    private javax.swing.JTextField jTextFieldNameInput;
    private javax.swing.JTextField jTextFieldNameSearch;
    private javax.swing.JMenuItem openFileMenu;
    private javax.swing.JMenuItem saveFileMenu;
    // End of variables declaration//GEN-END:variables
}
